==============================================================================================
// May 02,2020
// Narayan Lal Menariya
//                                Array - Liner Data Structure.
// Below problem statements are solved while explaining to my friend that one problem can be
// solved in multiple ways. Best solution can be choosen later based upon time complexity etc.
===============================================================================================
#include<stdio.h>
#include<conio.h>
#include<string.h>

int main()
{
	int arr[10] = {0};
	int i;
	for(i = 0; i<10;i++)
	{
		printf("\nEnter Input Element: ");
		scanf("%d",&arr[i]);
	}
	
	//===========================================
	//1. Find Smallest element in array
	//===========================================
	int small= arr[0];
	for(i=0;i<10;i++)
	{
		if (arr[i] < small)
		{
				small = arr[i];
		}
	}	
	printf("Smallest Elemnt:%d\n",small);
	
	//===========================================
	//2. find largest element
	//===========================================
	int largest = arr[0];
	for(i=0;i<10;i++)
	{
		if(arr[i] > largest)
		{
			largest = arr[i];
		}
	}
	printf("Largest Element:%d\n",largest);
	
	//============================================
	//3.Sort array in ascesnding order
	//============================================
	int j	 =0;
	int temp = 0;
	for(i=0;i<9;i++)
	{
		for(j=i+1;j<10;j++)
		{
			if(arr[i] > arr[j])
			{
				temp   = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
			}
		}
	}
	// Get Smallest & largest elment:
	printf("\nSmallest Element:%d, Largest Element:%d\n",arr[0],arr[9]);
	
	printf("=========== Ascending Order sorted array =============\n");
	//Print array;
	for(i=0;i<10;i++)
		printf("%d ",arr[i]);
		
	
	//================================================
	//4.Sort array in descending order
	//================================================
	for(i=0;i<9;i++)
	{
		for(j=i+1;j<10;j++)
		{
			if(arr[i] < arr[j])
			{
				temp   = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
			}
		}
	}
	
	printf("\n=========== Descending Order sorted array =============\n");
	//Print array;
	for(i=0;i<10;i++)
		printf("%d ",arr[i]);
		
	
	
	//================================================================
	//5. Print duplicate element in array - No need to store anywhere
	//================================================================
	int num   = 0;
	int count = 0;
	for(i=0;i<10;i++)
	{
		count = 0;
		num   = arr[i];
		for(j=0;j<10;j++)
		{
			if(num == arr[j])
			{
				count++;
			}
		}
		if(count > 1)
		{
			printf(" Element:%d is present %d times\n",arr[i],count);
		}
	}
	
	//==================================================
	//6. Remove duplicate element from an array
	//==================================================
	// Step 1: Replace duplicate element with 0 
	for(i=0;i<9;i++)
	{
		for(j=i+1;j<10;j++)
		{
			if(arr[i] == arr[j])
			{
				arr[j] = 0;
			}
		}
	}
	
	// Step 2: Create another array by excluding 0
	count = 0;
	for(i=0;i<10;i++)
	{
		// Get how many duplicate elemet are present
		if(arr[i] == 0)
		{
			count++;
		}
	}
	
	int arr2Size = 10 - count;
	int arr2[arr2Size] ;
	j = 0;
	for(i=0;i<10;i++)
	{
		if(arr[i] != 0)
		{
			arr2[j] = arr[i];
			j++;	
		}
	}
	printf("\nRemoved Duplicate element. New Array:\n");
	for(j=0;j<arr2Size;j++)
		printf("%d ",arr2[j]);
	
	
	return 0;
}
