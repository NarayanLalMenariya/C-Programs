//=======================================================================
// 2D Array: 2 Dimentional array
// Narayan Lal Menariya                               May10,2020 
//========================================================================
#include<stdio.h>
#include<conio.h>
#include<string.h>

int main()
{

	int row = 3, col = 3, i = 0, j= 0, k= 0;
	int arr[row][col];
	//------------------------------
	//1. Input array
	//------------------------------
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			printf("Enter value for arr[%d][%d]:",i,j);
			scanf("%d",&arr[i][j]);
		}
	}
	//------------------------------
	//2. Print array
	//------------------------------
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			printf("%d ",arr[i][j]);
		}
	}
	
	//----------------------------------------------------
	//3. Print array using equivalent pointer
	// This we will understand in pointer section.
	// a[i][j]			= *(*(a + i)+j)
	// a[i][j][k]		= *(*(*(a + i ) +j ) +k)
	// a[i][j][k][l]	= *(*(*(*(a + i ) +j ) +k) +l)
	//----------------------------------------------------
	printf("\nPrint Matrix Using Pointer:\n");
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			printf("%d ",*(*(arr+i)+j));
		}
	}
	
	//----------------------------------------
	//4. Get Diagonal Element
	//   ij ij ij
	// [ 00 01 02
	//   10 11 12
	//   20 21 22]
	//----------------------------------------
	printf("\nGet Diagonal elements[00-11-22]:\n");
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			if(i==j)
				printf("%d ",*(*(arr+i)+j));	
		}
	}
	
	printf("\nGet Diagonal elements[02-11-20]:\n");
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			if(j == ((row-1)-i))
				printf("%d ",*(*(arr+i)+j));	
		}
	}
	
	//-----------------------------------------
	//4. Get Lower Matrix element 
	//-----------------------------------------
	printf("\nLower Matrix Elements:\n");
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			if(i>=j)
				printf("%d ",*(*(arr+i)+j));	
		}
	}
	
	//-----------------------------------------
	//5. Get Upper Matrix element
	//-----------------------------------------
	printf("\nUpper Matrix Elements:\n");
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			if(i<=j)
				printf("%d ",*(*(arr+i)+j));	
		}
	}
	
	
	//------------------------------------------
	//6. Matrix Multiplications
	//------------------------------------------
	// No. of Column in 1st Matrix == No. of Row in 2nd Matrix
	// Size of new matrix = No.Of Row of 1st matrix * No. Of col of 2nd matrix
	//------------------------------------------
	// Mat1 = row1=2, col1=3
	// [a00 a01 a02
	//  a10 a11 a12] (2 * 3)

	// Mat2 = row2=3, col2=3
	// [b00 b01 b02
	//  b10 b11 b12
	//  b20 b21 b22] (3 * 3)
	
	// Resultant Matrix =  2 * 3
	// [(a00*b00 + a01*b10 + a02*b20)  (a00*b01 + a01*b11 + a02*b21) (a00*b02 + a01*b12 + a02*b22)
	//	(a10*b00 + a11*b10 + a12*b20)  (a10*b01 + a11*b11 + a12*b21) (a10*b02 + a11*b12 + a12*b22)] (2 * 3)
	
	int row1=2, col1=3, row2=3, col2=3, row3=2, col3=3;
	int mat1[row1][col1];
	int mat2[row2][col2];
	int mat3[row3][col3];

	//Input Mat1
	for(i=0;i<row1;i++)
	{
		for(j=0;j<col1;j++)
		{
			printf("Enter value for mat1[%d][%d]:",i,j);
			scanf("%d",&mat1[i][j]);
		}
	}

	//Input mat2
	for(i=0;i<row2;i++)
	{
		for(j=0;j<col2;j++)
		{
			printf("Enter value for mat2[%d][%d]:",i,j);
			scanf("%d",&mat2[i][j]);
		}
	}

	// Mat3 must have initial value = 0, else output will b wrong
	for(i=0;i<row3;i++)
	{
		for(j=0;j<col3;j++)
		{
			mat3[i][j] = 0;
		}
	}
	
	// mat3 = mat1 * mat2
	for(i=0;i<row1;i++)
	{
		for(j=0;j<col2;j++)
		{
			for(k=0;k<col1;k++)
			{
				mat3[i][j] += mat1[i][k] * mat2[k][j];			
			}
		}
	}
	
	//Display mat3
	for(i=0;i<row3;i++)
	{
		for(j=0;j<col3;j++)
		{
			printf("mat3[%d][%d]:%d\n",i,j,mat3[i][j]);
		}
	}	
	
	return 0;
}


